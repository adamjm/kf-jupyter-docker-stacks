ARG ARCH
ARG VERSION
ARG BASE_CONTAINER=adamjm32/kf-machine-learning-notebook-gpu-${ARCH}:$VERSION
FROM $BASE_CONTAINER
ARG ARCH=amd64
LABEL maintainer="Adam Makarucha"

USER root

## Compile CUDF from source to enable it to work with existing dependancies
ENV DEBIAN_FRONTEND=noninteractive

RUN apt update -y --fix-missing && \
    apt upgrade -y && \
    apt install -y \
      git \
      build-essential \
      libboost-all-dev \
      tzdata \
      libgdal-dev \
      gdal-bin

# Install conda
# Enables "source activate conda

ARG CC=gcc 
ARG CXX=g++
ARG NUM_PROCESSES=128
ARG RAI_VERSION=branch-0.14

USER root

RUN mkdir /tmp/peg && cd /tmp/peg && wget https://www.piumarta.com/software/peg/peg-0.1.18.tar.gz && \
    tar xvf peg-0.1.18.tar.gz && cd peg-0.1.18/ && \
    make && make install && \
    mkdir /tmp/libcypher && cd /tmp/libcypher && wget https://github.com/cleishm/libcypher-parser/releases/download/v0.6.1/libcypher-parser-0.6.1.tar.gz && \
    tar xvf libcypher-parser-0.6.1.tar.gz && cd libcypher-parser-0.6.1/ &&  ./configure && \
    make clean check && \
    make install

USER $NB_UID

COPY cudf_dev_cuda10.2_$ARCH.yml /tmp/cudf_environment.yml
# Get CUDF

## Install Dependancies 

RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    conda install --quiet --yes -n base "python-graphviz=0.14" "streamz=0.5.2" networkx python-louvain && \
    conda env update --file /tmp/cudf_environment.yml  --prune && \
    conda clean --all -f -y && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR

USER root
RUN apt-get update && apt-get install -y libedit-dev
USER $NB_UID

RUN git clone git://github.com/numba/numba.git /tmp/numba && \
    git clone https://github.com/numba/llvmlite.git /tmp/llvmlite && \
    cd /tmp/llvmlite && git checkout v0.32.1 && \
    conda install -c numba llvmdev=8.0.0 && \
    python setup.py build && python runtests.py && \
    python setup.py install && \
    cd /tmp/numba && git checkout 0.49.1 && \
    python setup.py build_ext --inplace && \
    python setup.py install && \
    pip install . && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR

RUN  pip install cupy && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR
    
## Update Numbda


#COPY rmm_CMakeLists.patch /tmp/

RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    mkdir /tmp/rmm && \
    git clone --recurse-submodules https://github.com/rapidsai/rmm.git /tmp/rmm && \
    cd /tmp/rmm && \
    git checkout $RAI_VERSION && \
    git submodule update --init --remote --recursive && \
    mkdir build && \
    cd build  && \
    cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DBUILD_TESTS=ON && \
    make -j $NUM_PROCESSES && \
    make test && \
    make install && \
    cd /tmp/rmm/python && \
    python setup.py build_ext --inplace && \
    python setup.py install && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR

RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    conda install --quiet --yes -n base "pyarrow=0.15.1" "arrow-cpp=0.15.1" && \
    conda clean --all -f -y && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR

RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    mkdir /tmp/cudf && \
    git clone https://github.com/rapidsai/cudf.git /tmp/cudf && \
    cd /tmp/cudf && \
    git checkout $RAI_VERSION && \
    git submodule update --init --remote --recursive && \
    cd /tmp/cudf/cpp && \
    mkdir build && \
    cd build  && \
    cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_CXX11_ABI=ON -DBUILD_TESTS=ON && \
    make -j $NUM_PROCESSES && \
    make test && \
    make install && \
    cd /tmp/cudf/python/nvstrings && \
    python setup.py install && \
    cd /tmp/cudf/python/cudf && \
    python setup.py build_ext --inplace && \
    python setup.py install && \
    cd /tmp/cudf/python/dask_cudf && \
    python setup.py install && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR

RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    mkdir /tmp/cuml && \
    git clone https://github.com/rapidsai/cuml.git /tmp/cuml && \
    cd /tmp/cuml && \
    git checkout branch-0.14 && \
    git submodule update --init --remote --recursive && \
    cd /tmp/cuml/cpp && \
    mkdir build && \
    cd build  && \
    cmake .. -DBUILD_CUML_STD_COMMS=OFF -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DGPU_ARCHS=ALL -DPARALLEL_LEVEL=32 -DCMAKE_CXX11_ABI=ON -DBLAS_LIBRARIES=$CONDA_PREFIX/lib/libopenblas.so && \
    make -j $NUM_PROCESSES && \
    make install && \
    cd /tmp/cuml/python/ && \
    python setup.py build_ext --inplace --singlegpu && \
    python setup.py install --singlegpu




RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    mkdir /tmp/cugraph && \
    git clone https://github.com/rapidsai/cugraph.git /tmp/cugraph && \
    cd /tmp/cugraph && \
    git checkout branch-0.14 && \
    git submodule update --init --remote --recursive && \
    cd /tmp/cugraph/cpp && \
    mkdir build && \
    cd build  && \
    cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_CXX11_ABI=ON -DBLAS_LIBRARIES=$CONDA_PREFIX/lib/libopenblas.so && \
    make -j $NUM_PROCESSES && \
    make install && \
    cd /tmp/cugraph/python/ && \
    python setup.py build_ext --inplace && \
    python setup.py install 

ENV CUDF_HOME=/tmp/cudf
ARG CUDF_HOME=/tmp/cudf

RUN eval "$(conda shell.bash hook |sed 's/base/base/g')" && \
    mkdir /tmp/cuspatial && \
    git clone https://github.com/rapidsai/cuspatial.git /tmp/cuspatial && \
    cd /tmp/cuspatial && \
    git checkout branch-0.14 && \
    git submodule update --init --remote --recursive && \
    cd /tmp/cuspatial/cpp && \
    mkdir build && \
    cd build  && \
    cmake .. -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX -DCMAKE_CXX11_ABI=ON -DBLAS_LIBRARIES=$CONDA_PREFIX/lib/libopenblas.so && \
    make -j $NUM_PROCESSES && \
    make install && \
    cd /tmp/cuspatial/python/cuspatial && \
    python setup.py build_ext --inplace && \
    python setup.py install && \
    fix-permissions $HOME && \
    fix-permissions $CONDA_DIR 

USER root 
RUN mkdir /home/jovyan/.local  && chown -R $NB_UID:$NB_UID /home/jovyan/.local
USER $NB_UID
